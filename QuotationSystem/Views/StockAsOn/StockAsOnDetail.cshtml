@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    ViewData["Title"] = "Stock As On Detail";
}

@model QuotationSystem.Models.StockAsOn.StockAsOnDetailViewModel

<div class="p-3 pt-5">
    <div class="d-flex flex-column" style="gap:1rem">
        <!--table-->
        <div class="table-responsive ibox-content">
            <table id="item-table" class="table table-bordered table-hover table-striped" style="width:100%;" cellspacing="0"></table>
            <a href="/StockAsOn">
                <button class="btn btn-success" type="button" id="backBtn"><i class="fa fa-long-arrow-left"></i> Back</button>
            </a>
        </div>
    </div>
</div>


@section Scripts{
    <script>
        $(document).ready(() => {
            var colOptions = [
                { title: '<div class="text-center">Label ID</div>', data: "labelId", className: "text-left" },
                { title: '<div class="text-center">Item Code</div>', data: "itemCode", className: "text-left" },
                { title: '<div class="text-center">Lot No</div>', data: "lotNo", className: "text-left" },
                { title: '<div class="text-center">Location</div>', data: "locationName", className: "text-left" },
                { title: '<div class="text-center">Qty</div>', data: "qty", className: "text-right" },
                { title: '<div class="text-center">Stock In Date</div>', data: "stockInDate", className: "text-center" },
            ];
            console.log("@Model.ItemCode");
            console.log("@Model.ItemName");
            table = $('#item-table').DataTable({
                "processing": true,
                "serverSide": true,
                "bLengthChange": false,
                "responsive": true,
                "bFilter": true,
                "searching": false,
                "pageLength": 20,
                "displayStart": 0,
                "ajax": {
                    url: "@Url.Action("GetStockAsOnDetail")",
                    type: "POST",
                    data: (opt) => {
                        return {
                            itemCode: "@Model.ItemCode",
                            whId: "@Model.WhId",
                            option: opt
                        };
                    }
                },
                "columns": colOptions,
            });
        });

    </script>
}